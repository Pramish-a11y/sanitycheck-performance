import React, { useState, useEffect } from 'react';
import { AlertCircle, Coffee, Target, TrendingUp, Mail, Bell, Check } from 'lucide-react';
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';

const MarketingSimulator = () => {
  const [metrics, setMetrics] = useState({
    sanity: 100,
    coffee: 0,
    clientRequests: 0
  });
  
  const [notifications, setNotifications] = useState([]);
  
  const clientMessages = [
    "Can we make the CTA button 0.00001px bigger?",
    "Let's A/B test 47 versions simultaneously",
    "Why isn't our $5 budget getting Super Bowl commercial results?",
    "I saw this TikTok trend from 2021...",
    "My nephew who's 'good with computers' suggested...",
    "Can we make it go viral? Like, today?",
    "Let's pivot the entire strategy based on this dream I had",
    "Why aren't we ranking #1 for 'best everything worldwide'?"
  ];
  
  const addNotification = (message) => {
    setNotifications(prev => [...prev, message].slice(-3));
  };
  
  useEffect(() => {
    const interval = setInterval(() => {
      if (Math.random() > 0.7) {
        const randomMessage = clientMessages[Math.floor(Math.random() * clientMessages.length)];
        addNotification(randomMessage);
        setMetrics(prev => ({
          ...prev,
          sanity: Math.max(0, prev.sanity - 10),
          clientRequests: prev.clientRequests + 1
        }));
      }
    }, 3000);
    
    return () => clearInterval(interval);
  }, []);
  
  const drinkCoffee = () => {
    setMetrics(prev => ({
      ...prev,
      coffee: prev.coffee + 1,
      sanity: Math.min(100, prev.sanity + 15)
    }));
    addNotification("☕ Caffeine levels increased!");
  };

  return (
    <div className="p-4 max-w-xl mx-auto space-y-4">
      <h2 className="text-2xl font-bold mb-4">Performance Marketer Life Simulator</h2>
      
      <div className="grid grid-cols-3 gap-4 mb-4">
        <div className="p-4 border rounded-lg text-center">
          <TrendingUp className="mx-auto mb-2" />
          <div>Sanity Level</div>
          <div className="font-bold">{metrics.sanity}%</div>
        </div>
        
        <div className="p-4 border rounded-lg text-center">
          <Coffee className="mx-auto mb-2" />
          <div>Coffee Count</div>
          <div className="font-bold">{metrics.coffee}</div>
        </div>
        
        <div className="p-4 border rounded-lg text-center">
          <Target className="mx-auto mb-2" />
          <div>Client Requests</div>
          <div className="font-bold">{metrics.clientRequests}</div>
        </div>
      </div>
      
      <button
        onClick={drinkCoffee}
        className="w-full p-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 flex items-center justify-center gap-2"
      >
        <Coffee size={20} /> Drink Coffee to Restore Sanity
      </button>
      
      <div className="space-y-2">
        {notifications.map((notification, index) => (
          <Alert key={index} variant="default" className="animate-slide-in">
            <AlertCircle className="h-4 w-4" />
            <AlertTitle>New Client Request!</AlertTitle>
            <AlertDescription>{notification}</AlertDescription>
          </Alert>
        ))}
      </div>
      
      {metrics.sanity === 0 && (
        <Alert variant="destructive">
          <AlertTitle>BURNOUT ALERT!</AlertTitle>
          <AlertDescription>
            Time to update that LinkedIn profile... or drink more coffee! ☕
          </AlertDescription>
        </Alert>
      )}
    </div>
  );
};

export default MarketingSimulator;
